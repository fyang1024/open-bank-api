/*
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * ProductConstraints
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-14T03:38:22.905Z[GMT]")public class ProductConstraints {
  /**
   * The type of constraint described.  See the next section for an overview of valid values and their meaning
   */
  @JsonAdapter(ConstraintTypeEnum.Adapter.class)
  public enum ConstraintTypeEnum {
    MIN_BALANCE("MIN_BALANCE"),
    OPENING_BALANCE("OPENING_BALANCE"),
    MAX_LIMIT("MAX_LIMIT"),
    MIN_LIMIT("MIN_LIMIT");

    private String value;

    ConstraintTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ConstraintTypeEnum fromValue(String text) {
      for (ConstraintTypeEnum b : ConstraintTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ConstraintTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConstraintTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConstraintTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ConstraintTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  @SerializedName("constraintType")
  private ConstraintTypeEnum constraintType = null;

  @SerializedName("additionalValue")
  private String additionalValue = null;
  public ProductConstraints constraintType(ConstraintTypeEnum constraintType) {
    this.constraintType = constraintType;
    return this;
  }

  

  /**
  * The type of constraint described.  See the next section for an overview of valid values and their meaning
  * @return constraintType
  **/
  @Schema(required = true, description = "The type of constraint described.  See the next section for an overview of valid values and their meaning")
  public ConstraintTypeEnum getConstraintType() {
    return constraintType;
  }
  public void setConstraintType(ConstraintTypeEnum constraintType) {
    this.constraintType = constraintType;
  }
  public ProductConstraints additionalValue(String additionalValue) {
    this.additionalValue = additionalValue;
    return this;
  }

  

  /**
  * Generic field containing additional information relevant to the constraintType specified.  Whether mandatory or not is dependent on the value of constraintType
  * @return additionalValue
  **/
  @Schema(description = "Generic field containing additional information relevant to the constraintType specified.  Whether mandatory or not is dependent on the value of constraintType")
  public String getAdditionalValue() {
    return additionalValue;
  }
  public void setAdditionalValue(String additionalValue) {
    this.additionalValue = additionalValue;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductConstraints productConstraints = (ProductConstraints) o;
    return Objects.equals(this.constraintType, productConstraints.constraintType) &&
        Objects.equals(this.additionalValue, productConstraints.additionalValue);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(constraintType, additionalValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductConstraints {\n");
    
    sb.append("    constraintType: ").append(toIndentedString(constraintType)).append("\n");
    sb.append("    additionalValue: ").append(toIndentedString(additionalValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
