/*
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ProductBundles
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-02-14T03:38:22.905Z[GMT]")public class ProductBundles {

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("additionalInfoUri")
  private String additionalInfoUri = null;

  @SerializedName("productIds")
  private List<String> productIds = new ArrayList<String>();
  public ProductBundles name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Name of the bundle
  * @return name
  **/
  @Schema(required = true, description = "Name of the bundle")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ProductBundles description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Description of the bundle
  * @return description
  **/
  @Schema(required = true, description = "Description of the bundle")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public ProductBundles additionalInfoUri(String additionalInfoUri) {
    this.additionalInfoUri = additionalInfoUri;
    return this;
  }

  

  /**
  * Link to a web page with more information on the bundle criteria and benefits
  * @return additionalInfoUri
  **/
  @Schema(description = "Link to a web page with more information on the bundle criteria and benefits")
  public String getAdditionalInfoUri() {
    return additionalInfoUri;
  }
  public void setAdditionalInfoUri(String additionalInfoUri) {
    this.additionalInfoUri = additionalInfoUri;
  }
  public ProductBundles productIds(List<String> productIds) {
    this.productIds = productIds;
    return this;
  }

  public ProductBundles addProductIdsItem(String productIdsItem) {
    this.productIds.add(productIdsItem);
    return this;
  }

  /**
  * Array of product IDs for products included in the bundle
  * @return productIds
  **/
  @Schema(required = true, description = "Array of product IDs for products included in the bundle")
  public List<String> getProductIds() {
    return productIds;
  }
  public void setProductIds(List<String> productIds) {
    this.productIds = productIds;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductBundles productBundles = (ProductBundles) o;
    return Objects.equals(this.name, productBundles.name) &&
        Objects.equals(this.description, productBundles.description) &&
        Objects.equals(this.additionalInfoUri, productBundles.additionalInfoUri) &&
        Objects.equals(this.productIds, productBundles.productIds);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(name, description, additionalInfoUri, productIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductBundles {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    additionalInfoUri: ").append(toIndentedString(additionalInfoUri)).append("\n");
    sb.append("    productIds: ").append(toIndentedString(productIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
