/**
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DomesticPayeeAccount', 'model/DomesticPayeeCard', 'model/DomesticPayeePayId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DomesticPayeeAccount'), require('./DomesticPayeeCard'), require('./DomesticPayeePayId'));
  } else {
    // Browser globals (root is window)
    if (!root.ConsumerDataStandards) {
      root.ConsumerDataStandards = {};
    }
    root.ConsumerDataStandards.DomesticPayee = factory(root.ConsumerDataStandards.ApiClient, root.ConsumerDataStandards.DomesticPayeeAccount, root.ConsumerDataStandards.DomesticPayeeCard, root.ConsumerDataStandards.DomesticPayeePayId);
  }
}(this, function(ApiClient, DomesticPayeeAccount, DomesticPayeeCard, DomesticPayeePayId) {
  'use strict';



  /**
   * The DomesticPayee model module.
   * @module model/DomesticPayee
   * @version 1-oas3
   */

  /**
   * Constructs a new <code>DomesticPayee</code>.
   * @alias module:model/DomesticPayee
   * @class
   * @param payeeAccountUType {module:model/DomesticPayee.PayeeAccountUTypeEnum} Type of account object included. Valid values are: { payeeAccountUType - - account A standard Australian account defined by BSB/Account Number payId A PayID recognised by NPP
   */
  var exports = function(payeeAccountUType) {
    var _this = this;

    _this['payeeAccountUType'] = payeeAccountUType;
  };

  /**
   * Constructs a <code>DomesticPayee</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DomesticPayee} obj Optional instance to populate.
   * @return {module:model/DomesticPayee} The populated <code>DomesticPayee</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('payeeAccountUType')) {
        obj['payeeAccountUType'] = ApiClient.convertToType(data['payeeAccountUType'], 'String');
      }
      if (data.hasOwnProperty('account')) {
        obj['account'] = DomesticPayeeAccount.constructFromObject(data['account']);
      }
      if (data.hasOwnProperty('card')) {
        obj['card'] = DomesticPayeeCard.constructFromObject(data['card']);
      }
      if (data.hasOwnProperty('payId')) {
        obj['payId'] = DomesticPayeePayId.constructFromObject(data['payId']);
      }
    }
    return obj;
  }

  /**
   * Type of account object included. Valid values are: { payeeAccountUType - - account A standard Australian account defined by BSB/Account Number payId A PayID recognised by NPP
   * @member {module:model/DomesticPayee.PayeeAccountUTypeEnum} payeeAccountUType
   */
  exports.prototype['payeeAccountUType'] = undefined;
  /**
   * @member {module:model/DomesticPayeeAccount} account
   */
  exports.prototype['account'] = undefined;
  /**
   * @member {module:model/DomesticPayeeCard} card
   */
  exports.prototype['card'] = undefined;
  /**
   * @member {module:model/DomesticPayeePayId} payId
   */
  exports.prototype['payId'] = undefined;


  /**
   * Allowed values for the <code>payeeAccountUType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PayeeAccountUTypeEnum = {
    /**
     * value: "account"
     * @const
     */
    "account": "account",
    /**
     * value: "card"
     * @const
     */
    "card": "card",
    /**
     * value: "payId"
     * @const
     */
    "payId": "payId"  };


  return exports;
}));


