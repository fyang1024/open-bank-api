/**
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BillerPayee', 'model/DomesticPayee', 'model/InternationalPayee', 'model/Payee'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BillerPayee'), require('./DomesticPayee'), require('./InternationalPayee'), require('./Payee'));
  } else {
    // Browser globals (root is window)
    if (!root.ConsumerDataStandards) {
      root.ConsumerDataStandards = {};
    }
    root.ConsumerDataStandards.PayeeDetail = factory(root.ConsumerDataStandards.ApiClient, root.ConsumerDataStandards.BillerPayee, root.ConsumerDataStandards.DomesticPayee, root.ConsumerDataStandards.InternationalPayee, root.ConsumerDataStandards.Payee);
  }
}(this, function(ApiClient, BillerPayee, DomesticPayee, InternationalPayee, Payee) {
  'use strict';



  /**
   * The PayeeDetail model module.
   * @module model/PayeeDetail
   * @version 1-oas3
   */

  /**
   * Constructs a new <code>PayeeDetail</code>.
   * @alias module:model/PayeeDetail
   * @class
   * @implements module:model/Payee
   * @param payeeUType {module:model/PayeeDetail.PayeeUTypeEnum} Type of object included that describes the payee in detail
   */
  var exports = function(payeeUType) {
    var _this = this;

    Payee.call(_this, payeeId, nickname, type);
    _this['payeeId'] = payeeId;
    _this['nickname'] = nickname;
    _this['type'] = type;
    _this['payeeUType'] = payeeUType;
  };

  /**
   * Constructs a <code>PayeeDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PayeeDetail} obj Optional instance to populate.
   * @return {module:model/PayeeDetail} The populated <code>PayeeDetail</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      Payee.constructFromObject(data, obj);
      if (data.hasOwnProperty('payeeId')) {
        obj['payeeId'] = ApiClient.convertToType(data['payeeId'], 'String');
      }
      if (data.hasOwnProperty('nickname')) {
        obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('creationDate')) {
        obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
      }
      if (data.hasOwnProperty('payeeUType')) {
        obj['payeeUType'] = ApiClient.convertToType(data['payeeUType'], 'String');
      }
      if (data.hasOwnProperty('domestic')) {
        obj['domestic'] = DomesticPayee.constructFromObject(data['domestic']);
      }
      if (data.hasOwnProperty('biller')) {
        obj['biller'] = BillerPayee.constructFromObject(data['biller']);
      }
      if (data.hasOwnProperty('international')) {
        obj['international'] = InternationalPayee.constructFromObject(data['international']);
      }
    }
    return obj;
  }

  /**
   * ID of the payee adhering to the rules of ID permanence
   * @member {String} payeeId
   */
  exports.prototype['payeeId'] = undefined;
  /**
   * The short display name of the payee as provided by the customer
   * @member {String} nickname
   */
  exports.prototype['nickname'] = undefined;
  /**
   * A description of the payee provided by the customer
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The type of payee. DOMESTIC means a registered payee for domestic payments including NPP. INTERNATIONAL means a registered payee for international payments. BILLER means a registered payee for BPAY
   * @member {module:model/PayeeDetail.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * The date the payee was created by the customer
   * @member {String} creationDate
   */
  exports.prototype['creationDate'] = undefined;
  /**
   * Type of object included that describes the payee in detail
   * @member {module:model/PayeeDetail.PayeeUTypeEnum} payeeUType
   */
  exports.prototype['payeeUType'] = undefined;
  /**
   * @member {module:model/DomesticPayee} domestic
   */
  exports.prototype['domestic'] = undefined;
  /**
   * @member {module:model/BillerPayee} biller
   */
  exports.prototype['biller'] = undefined;
  /**
   * @member {module:model/InternationalPayee} international
   */
  exports.prototype['international'] = undefined;

  // Implement Payee interface:
  /**
   * ID of the payee adhering to the rules of ID permanence
   * @member {String} payeeId
   */
exports.prototype['payeeId'] = undefined;

  /**
   * The short display name of the payee as provided by the customer
   * @member {String} nickname
   */
exports.prototype['nickname'] = undefined;

  /**
   * A description of the payee provided by the customer
   * @member {String} description
   */
exports.prototype['description'] = undefined;

  /**
   * The type of payee. DOMESTIC means a registered payee for domestic payments including NPP. INTERNATIONAL means a registered payee for international payments. BILLER means a registered payee for BPAY
   * @member {module:model/Payee.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * The date the payee was created by the customer
   * @member {String} creationDate
   */
exports.prototype['creationDate'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "DOMESTIC"
     * @const
     */
    "DOMESTIC": "DOMESTIC",
    /**
     * value: "INTERNATIONAL"
     * @const
     */
    "INTERNATIONAL": "INTERNATIONAL",
    /**
     * value: "BILLER"
     * @const
     */
    "BILLER": "BILLER"  };

  /**
   * Allowed values for the <code>payeeUType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PayeeUTypeEnum = {
    /**
     * value: "domestic"
     * @const
     */
    "domestic": "domestic",
    /**
     * value: "biller"
     * @const
     */
    "biller": "biller",
    /**
     * value: "international"
     * @const
     */
    "international": "international"  };


  return exports;
}));


