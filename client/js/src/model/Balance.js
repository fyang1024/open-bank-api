/**
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CurrencyAmount', 'model/DepositBalance', 'model/LendingBalance'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CurrencyAmount'), require('./DepositBalance'), require('./LendingBalance'));
  } else {
    // Browser globals (root is window)
    if (!root.ConsumerDataStandards) {
      root.ConsumerDataStandards = {};
    }
    root.ConsumerDataStandards.Balance = factory(root.ConsumerDataStandards.ApiClient, root.ConsumerDataStandards.CurrencyAmount, root.ConsumerDataStandards.DepositBalance, root.ConsumerDataStandards.LendingBalance);
  }
}(this, function(ApiClient, CurrencyAmount, DepositBalance, LendingBalance) {
  'use strict';



  /**
   * The Balance model module.
   * @module model/Balance
   * @version 1-oas3
   */

  /**
   * Constructs a new <code>Balance</code>.
   * @alias module:model/Balance
   * @class
   * @param accountId {String} A unique ID of the account adhering to the standards for ID permanence
   * @param balanceUType {module:model/Balance.BalanceUTypeEnum} The type of balance object provided for the account
   */
  var exports = function(accountId, balanceUType) {
    var _this = this;

    _this['accountId'] = accountId;
    _this['balanceUType'] = balanceUType;
  };

  /**
   * Constructs a <code>Balance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Balance} obj Optional instance to populate.
   * @return {module:model/Balance} The populated <code>Balance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('accountId')) {
        obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
      }
      if (data.hasOwnProperty('balanceUType')) {
        obj['balanceUType'] = ApiClient.convertToType(data['balanceUType'], 'String');
      }
      if (data.hasOwnProperty('deposit')) {
        obj['deposit'] = DepositBalance.constructFromObject(data['deposit']);
      }
      if (data.hasOwnProperty('lending')) {
        obj['lending'] = LendingBalance.constructFromObject(data['lending']);
      }
      if (data.hasOwnProperty('purses')) {
        obj['purses'] = ApiClient.convertToType(data['purses'], [CurrencyAmount]);
      }
    }
    return obj;
  }

  /**
   * A unique ID of the account adhering to the standards for ID permanence
   * @member {String} accountId
   */
  exports.prototype['accountId'] = undefined;
  /**
   * The type of balance object provided for the account
   * @member {module:model/Balance.BalanceUTypeEnum} balanceUType
   */
  exports.prototype['balanceUType'] = undefined;
  /**
   * @member {module:model/DepositBalance} deposit
   */
  exports.prototype['deposit'] = undefined;
  /**
   * @member {module:model/LendingBalance} lending
   */
  exports.prototype['lending'] = undefined;
  /**
   * @member {Array.<module:model/CurrencyAmount>} purses
   */
  exports.prototype['purses'] = undefined;


  /**
   * Allowed values for the <code>balanceUType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BalanceUTypeEnum = {
    /**
     * value: "deposit"
     * @const
     */
    "deposit": "deposit",
    /**
     * value: "lending"
     * @const
     */
    "lending": "lending",
    /**
     * value: "purses"
     * @const
     */
    "purses": "purses"  };


  return exports;
}));


