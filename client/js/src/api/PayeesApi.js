/**
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ResponseBankingPayeeDetails', 'model/ResponseBankingPayees'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ResponseBankingPayeeDetails'), require('../model/ResponseBankingPayees'));
  } else {
    // Browser globals (root is window)
    if (!root.ConsumerDataStandards) {
      root.ConsumerDataStandards = {};
    }
    root.ConsumerDataStandards.PayeesApi = factory(root.ConsumerDataStandards.ApiClient, root.ConsumerDataStandards.ResponseBankingPayeeDetails, root.ConsumerDataStandards.ResponseBankingPayees);
  }
}(this, function(ApiClient, ResponseBankingPayeeDetails, ResponseBankingPayees) {
  'use strict';

  /**
   * Payees service.
   * @module api/PayeesApi
   * @version 1-oas3
   */

  /**
   * Constructs a new PayeesApi. 
   * @alias module:api/PayeesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getPayeeDetail operation.
     * @callback module:api/PayeesApi~getPayeeDetailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseBankingPayeeDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payee Detail
     * Obtain detailed information on a single payee
     * @param {String} payeeId The ID used to locate the details of a particular payee
     * @param {module:api/PayeesApi~getPayeeDetailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseBankingPayeeDetails}
     */
    this.getPayeeDetail = function(payeeId, callback) {
      var postBody = null;

      // verify the required parameter 'payeeId' is set
      if (payeeId === undefined || payeeId === null) {
        throw new Error("Missing the required parameter 'payeeId' when calling getPayeeDetail");
      }


      var pathParams = {
        'payeeId': payeeId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['OAuth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResponseBankingPayeeDetails;

      return this.apiClient.callApi(
        '/banking/payees/{payeeId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listPayees operation.
     * @callback module:api/PayeesApi~listPayeesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseBankingPayees} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Payees
     * Obtain a list of pre-registered payees
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.type Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL (default to &#39;ALL&#39;)
     * @param {Number} opts.page Page of results to request (standard pagination) (default to 1)
     * @param {Number} opts.pageSize Page size to request. Default is 25 (standard pagination) (default to 25)
     * @param {module:api/PayeesApi~listPayeesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseBankingPayees}
     */
    this.listPayees = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'type': opts['type'],
        'page': opts['page'],
        'page-size': opts['pageSize'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['OAuth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResponseBankingPayees;

      return this.apiClient.callApi(
        '/banking/payees', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
