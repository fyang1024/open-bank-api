//
// PayeesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class PayeesAPI {     /**
     Get Payee Detail
     - parameter payeeId: (path) The ID used to locate the details of a particular payee 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPayeeDetail(payeeId: String, completion: @escaping ((_ data: ResponseBankingPayeeDetails?,_ error: Error?) -> Void)) {
        getPayeeDetailWithRequestBuilder(payeeId: payeeId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Payee Detail
     - GET /banking/payees/{payeeId}
     - Obtain detailed information on a single payee
     - parameter payeeId: (path) The ID used to locate the details of a particular payee 

     - returns: RequestBuilder<ResponseBankingPayeeDetails> 
     */
    open class func getPayeeDetailWithRequestBuilder(payeeId: String) -> RequestBuilder<ResponseBankingPayeeDetails> {
        var path = "/banking/payees/{payeeId}"
        let payeeIdPreEscape = "\(payeeId)"
        let payeeIdPostEscape = payeeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{payeeId}", with: payeeIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ResponseBankingPayeeDetails>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: )
    }


    /**
     * enum for parameter type
     */
    public enum ModelType_listPayees: String { 
        case domestic = "DOMESTIC"
        case international = "INTERNATIONAL"
        case biller = "BILLER"
    }
    /**
     Get Payees
     - parameter type: (query) Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL (optional)     - parameter page: (query) Page of results to request (standard pagination) (optional)     - parameter pageSize: (query) Page size to request. Default is 25 (standard pagination) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listPayees(type: ModelType_listPayees? = nil, page: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: ResponseBankingPayees?,_ error: Error?) -> Void)) {
        listPayeesWithRequestBuilder(type: type, page: page, pageSize: pageSize).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get Payees
     - GET /banking/payees
     - Obtain a list of pre-registered payees
     - parameter type: () Filter on the payee type field.  In addition to normal type field values, ALL can be specified to retrieve all payees.  If absent the assumed value is ALL (optional)     - parameter page: () Page of results to request (standard pagination) (optional)     - parameter pageSize: () Page size to request. Default is 25 (standard pagination) (optional)

     - returns: RequestBuilder<ResponseBankingPayees> 
     */
    open class func listPayeesWithRequestBuilder(type: ModelType_listPayees? = nil, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<ResponseBankingPayees> {
        let path = "/banking/payees"
        let URLString = SwaggerClientAPI.basePath + path        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "type": type?.rawValue, 
        ])        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "page": page?.encodeToJSON(), 
        ])        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "page-size": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ResponseBankingPayees>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: )
    }

}
