//
// PersonDetail.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct PersonDetail: Codable {


    /** The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data */
    public var lastUpdateTime: String

    /** For people with single names this field need not be present.  The single name should be in the lastName field */
    public var firstName: String?

    /** For people with single names the single name should be in this field */
    public var lastName: String

    /** Field is mandatory but array may be empty */
    public var middleNames: [String]

    /** Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc) */
    public var _prefix: String?

    /** Used for a trailing suffix to the name (e.g. Jr) */
    public var suffix: String?

    /** Value is a valid [ANZCO v1.2](http://www.abs.gov.au/ANZSCO) Standard Occupation classification. */
    public var occupationCode: String?

    /** At least one record is required */
    public var phoneNumbers: [PhoneNumber]

    /** May be empty */
    public var emailAddresses: [EmailAddress]

    /** Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail */
    public var physicalAddresses: [PhysicalAddressWithPurpose]
    public init(lastUpdateTime: String, firstName: String?, lastName: String, middleNames: [String], _prefix: String?, suffix: String?, occupationCode: String?, phoneNumbers: [PhoneNumber], emailAddresses: [EmailAddress], physicalAddresses: [PhysicalAddressWithPurpose]) { 
        self.lastUpdateTime = lastUpdateTime
        self.firstName = firstName
        self.lastName = lastName
        self.middleNames = middleNames
        self._prefix = _prefix
        self.suffix = suffix
        self.occupationCode = occupationCode
        self.phoneNumbers = phoneNumbers
        self.emailAddresses = emailAddresses
        self.physicalAddresses = physicalAddresses
    }
    public enum CodingKeys: String, CodingKey { 
        case lastUpdateTime
        case firstName
        case lastName
        case middleNames
        case _prefix = "prefix"
        case suffix
        case occupationCode
        case phoneNumbers
        case emailAddresses
        case physicalAddresses
    }

}
