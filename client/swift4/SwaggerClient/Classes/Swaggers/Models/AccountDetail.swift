//
// AccountDetail.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct AccountDetail: Codable {

    public enum OpenStatus: String, Codable { 
    }    public enum SpecificAccountUType: String, Codable { 
        case termdeposit = "termDeposit"
        case creditcard = "creditCard"
        case loan = "loan"
    }
    /** A unique ID of the account adhering to the standards for ID permanence */
    public var accountId: String

    /** The display name of the account. If a customer provided nickname is available that value should be returned */
    public var displayName: String

    /** A customer supplied nick name for the account */
    public var nickname: String?

    /** A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number this should be formatted with each digit masked and the last three digits unmasked */
    public var maskedNumber: String
    /** Open or closed status for the account.  If not present then OPEN is assumed */
    public var openStatus: OpenStatus?

    /** Flag indicating that the customer associated with the authorisation is an owner of the account.  Does not indicate sole ownership, however.  If no present then &#x27;true&#x27; is assumed */
    public var isOwned: Bool?

    public var productCategory: EnumProductCategory

    /** A unique name or identifier for the account class for this account as defined by the account provider.  Not expected to be used for display */
    public var productName: String

    /** The unmasked BSB for the account.  Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces */
    public var bsb: String?

    /** The unmasked account number for the account.  Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces */
    public var accountNumber: String?

    /** Optional field to indicate if this account is part of a bundle that is providing additional benefit for to the customer */
    public var bundleName: String?
    /** The type of structure to present account specific fields. */
    public var specificAccountUType: SpecificAccountUType?

    public var termDeposit: TermDepositAccount?

    public var creditCard: CreditCardAccount?

    public var loan: LoanAccount?

    public var features: [AccountFeatures]?

    public var fees: [AccountFees]?

    public var depositRates: [AccountDepositRates]?

    public var lendingRates: [AccountLendingRates]?

    public var address: PhysicalAddress?
    public init(accountId: String, displayName: String, nickname: String?, maskedNumber: String, openStatus: OpenStatus?, isOwned: Bool?, productCategory: EnumProductCategory, productName: String, bsb: String?, accountNumber: String?, bundleName: String?, specificAccountUType: SpecificAccountUType?, termDeposit: TermDepositAccount?, creditCard: CreditCardAccount?, loan: LoanAccount?, features: [AccountFeatures]?, fees: [AccountFees]?, depositRates: [AccountDepositRates]?, lendingRates: [AccountLendingRates]?, address: PhysicalAddress?) { 
        self.accountId = accountId
        self.displayName = displayName
        self.nickname = nickname
        self.maskedNumber = maskedNumber
        self.openStatus = openStatus
        self.isOwned = isOwned
        self.productCategory = productCategory
        self.productName = productName
        self.bsb = bsb
        self.accountNumber = accountNumber
        self.bundleName = bundleName
        self.specificAccountUType = specificAccountUType
        self.termDeposit = termDeposit
        self.creditCard = creditCard
        self.loan = loan
        self.features = features
        self.fees = fees
        self.depositRates = depositRates
        self.lendingRates = lendingRates
        self.address = address
    }

}
