//
// AccountFees.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct AccountFees: Codable {

    public enum FeeType: String, Codable { 
        case periodic = "PERIODIC"
        case transaction = "TRANSACTION"
        case exit = "EXIT"
        case overdraw = "OVERDRAW"
        case minBalance = "MIN_BALANCE"
        case redraw = "REDRAW"
        case chequeCash = "CHEQUE_CASH"
        case chequeStop = "CHEQUE_STOP"
        case chequeBook = "CHEQUE_BOOK"
        case cardReplace = "CARD_REPLACE"
        case paperStatement = "PAPER_STATEMENT"
        case otherEvent = "OTHER_EVENT"
    }
    /** Name of the fee */
    public var name: String
    /** The type of fee */
    public var feeType: FeeType

    /** The amount charged for the fee. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory */
    public var amount: String?

    /** A fee rate calculated based on a proportion of the balance. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory */
    public var balanceRate: String?

    /** A fee rate calculated based on a proportion of a transaction. Assumed to be in AUD. One of amount, balanceRate and transactionRate is mandatory */
    public var transactionRate: String?

    /** The currency the fee will be charged in. Assumes AUD if absent */
    public var currency: String?

    /** Generic field containing additional information relevant to the feeType specified. Whether mandatory or not is dependent on the value of feeType */
    public var additionalValue: String?

    /** Display text providing more information on the fee */
    public var additionalInfo: String?

    /** Link to a web page with more information on this fee */
    public var additionalInfoUri: String?

    public var discounts: [AccountDiscounts]?
    public init(name: String, feeType: FeeType, amount: String?, balanceRate: String?, transactionRate: String?, currency: String?, additionalValue: String?, additionalInfo: String?, additionalInfoUri: String?, discounts: [AccountDiscounts]?) { 
        self.name = name
        self.feeType = feeType
        self.amount = amount
        self.balanceRate = balanceRate
        self.transactionRate = transactionRate
        self.currency = currency
        self.additionalValue = additionalValue
        self.additionalInfo = additionalInfo
        self.additionalInfoUri = additionalInfoUri
        self.discounts = discounts
    }

}
