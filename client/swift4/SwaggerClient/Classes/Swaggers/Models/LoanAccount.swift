//
// LoanAccount.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct LoanAccount: Codable {

    public enum RepaymentType: String, Codable { 
        case interestOnly = "INTEREST_ONLY"
        case principalAndInterest = "PRINCIPAL_AND_INTEREST"
    }
    /** Optional original start date for the loan */
    public var originalStartDate: String?

    /** Optional original loan value */
    public var originalLoanAmount: String?

    /** If absent assumes AUD */
    public var originalLoanCurrency: String?

    /** Date that the loan is due to be repaid in full */
    public var loanEndDate: String?

    /** Next date that an instalment is required */
    public var nextInstalmentDate: String?

    /** Minimum amount of next instalment */
    public var minInstalmentAmount: String?

    /** If absent assumes AUD */
    public var minInstalmentCurrency: String?

    /** Maximum amount of funds that can be redrawn. If not present redraw is not available even if the feature exists for the account */
    public var maxRedraw: String?

    /** If absent assumes AUD */
    public var maxRedrawCurrency: String?

    /** Minimum redraw amount */
    public var minRedraw: String?

    /** If absent assumes AUD */
    public var minRedrawCurrency: String?

    /** Set to true if one or more offset accounts are configured for this loan account */
    public var offsetAccountEnabled: Bool?

    /** The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accesses under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation */
    public var offsetAccountIds: [String]?

    /** The expected or required repayment frequency. Formatted according to ISO 8601 Durations */
    public var repaymentFrequency: String?
    /** Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST */
    public var repaymentType: RepaymentType?
    public init(originalStartDate: String?, originalLoanAmount: String?, originalLoanCurrency: String?, loanEndDate: String?, nextInstalmentDate: String?, minInstalmentAmount: String?, minInstalmentCurrency: String?, maxRedraw: String?, maxRedrawCurrency: String?, minRedraw: String?, minRedrawCurrency: String?, offsetAccountEnabled: Bool?, offsetAccountIds: [String]?, repaymentFrequency: String?, repaymentType: RepaymentType?) { 
        self.originalStartDate = originalStartDate
        self.originalLoanAmount = originalLoanAmount
        self.originalLoanCurrency = originalLoanCurrency
        self.loanEndDate = loanEndDate
        self.nextInstalmentDate = nextInstalmentDate
        self.minInstalmentAmount = minInstalmentAmount
        self.minInstalmentCurrency = minInstalmentCurrency
        self.maxRedraw = maxRedraw
        self.maxRedrawCurrency = maxRedrawCurrency
        self.minRedraw = minRedraw
        self.minRedrawCurrency = minRedrawCurrency
        self.offsetAccountEnabled = offsetAccountEnabled
        self.offsetAccountIds = offsetAccountIds
        self.repaymentFrequency = repaymentFrequency
        self.repaymentType = repaymentType
    }

}
