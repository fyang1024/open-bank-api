//
// TransactionDetail.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct TransactionDetail: Codable {

    public enum ModelType: String, Codable { 
    }    public enum Status: String, Codable { 
    }
    /** A unique ID of the account adhering to the standards for ID permanence */
    public var accountId: String

    /** A unique ID of the transaction adhering to the standards for ID permanence. This is mandatory (through hashing if necessary) unless there are specific and justifiable technical reasons why a transaction cannot be uniquely identified for a particular account type */
    public var transactionId: String?

    /** True if extended information is available using the transaction detail end point. False if extended data is not available */
    public var isDetailAvailable: Bool
    /** The type of the transaction */
    public var type: ModelType
    /** Status of the transaction whether pending or posted.  Note that there is currently no provision in the standards to gaurantee the ability to correlate a pending transaction with an associated posted transaction */
    public var status: Status

    /** The transaction description as applied by the financial institution */
    public var _description: String

    /** The time the transaction was posted. This field is mandatory if the transaction has status POSTED. This is the time that appears on a standard statement */
    public var postingDateTime: String?

    /** Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry */
    public var valueDateTime: String?

    /** The time the transaction was executed by the originating customer, if available */
    public var executionDateTime: String?

    /** The value of the transaction. Negative values mean money was outgoing from the account */
    public var amount: String?

    /** The currency for the transaction amount. AUD assumed if not present */
    public var currency: String?

    /** The reference for the transaction provided by the originating institution.  Empty string if no data provided */
    public var reference: String

    /** Name of the merchant for an outgoing payment to a merchant */
    public var merchantName: String?

    /** The merchant category code (or MCC) for an outgoing payment to a merchant */
    public var merchantCategoryCode: String?

    /** BPay Biller Code for the transaction (if available) */
    public var billerCode: String?

    /** Name of the BPay biller for the transaction (if available) */
    public var billerName: String?

    /** BPay CRN for the transaction (if available) */
    public var crn: String?

    /** 6 Digit APCA number for the initiating institution */
    public var apcaNumber: String?

    public var extendedData: TransactionDetailExtendedData
    public init(accountId: String, transactionId: String?, isDetailAvailable: Bool, type: ModelType, status: Status, _description: String, postingDateTime: String?, valueDateTime: String?, executionDateTime: String?, amount: String?, currency: String?, reference: String, merchantName: String?, merchantCategoryCode: String?, billerCode: String?, billerName: String?, crn: String?, apcaNumber: String?, extendedData: TransactionDetailExtendedData) { 
        self.accountId = accountId
        self.transactionId = transactionId
        self.isDetailAvailable = isDetailAvailable
        self.type = type
        self.status = status
        self._description = _description
        self.postingDateTime = postingDateTime
        self.valueDateTime = valueDateTime
        self.executionDateTime = executionDateTime
        self.amount = amount
        self.currency = currency
        self.reference = reference
        self.merchantName = merchantName
        self.merchantCategoryCode = merchantCategoryCode
        self.billerCode = billerCode
        self.billerName = billerName
        self.crn = crn
        self.apcaNumber = apcaNumber
        self.extendedData = extendedData
    }
    public enum CodingKeys: String, CodingKey { 
        case accountId
        case transactionId
        case isDetailAvailable
        case type
        case status
        case _description = "description"
        case postingDateTime
        case valueDateTime
        case executionDateTime
        case amount
        case currency
        case reference
        case merchantName
        case merchantCategoryCode
        case billerCode
        case billerName
        case crn
        case apcaNumber
        case extendedData
    }

}
