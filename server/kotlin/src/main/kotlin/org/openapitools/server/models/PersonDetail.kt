/**
* Consumer Data Standards
* API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
*
* OpenAPI spec version: 1-oas3
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.models

import org.openapitools.server.models.EmailAddress
import org.openapitools.server.models.Person
import org.openapitools.server.models.PhoneNumber
import org.openapitools.server.models.PhysicalAddressWithPurpose

/**
 * 
 * @param lastUpdateTime The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data
 * @param firstName For people with single names this field need not be present.  The single name should be in the lastName field
 * @param lastName For people with single names the single name should be in this field
 * @param middleNames Field is mandatory but array may be empty
 * @param prefix Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc)
 * @param suffix Used for a trailing suffix to the name (e.g. Jr)
 * @param occupationCode Value is a valid [ANZCO v1.2](http://www.abs.gov.au/ANZSCO) Standard Occupation classification.
 * @param phoneNumbers At least one record is required
 * @param emailAddresses May be empty
 * @param physicalAddresses Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail
 */
data class PersonDetail (
    /* The date and time that this record was last updated by the customer.  If no update has occurred then this date should reflect the initial creation date for the data */
    val lastUpdateTime: kotlin.String,
    /* For people with single names the single name should be in this field */
    val lastName: kotlin.String,
    /* Field is mandatory but array may be empty */
    val middleNames: kotlin.Array<kotlin.String>,
    /* At least one record is required */
    val phoneNumbers: kotlin.Array<PhoneNumber>,
    /* May be empty */
    val emailAddresses: kotlin.Array<EmailAddress>,
    /* Must contain at least one address. One and only one address may have the purpose of REGISTERED. Zero or one, and no more than one, record may have the purpose of MAIL. If zero then the REGISTERED address is to be used for mail */
    val physicalAddresses: kotlin.Array<PhysicalAddressWithPurpose>,
    /* For people with single names this field need not be present.  The single name should be in the lastName field */
    val firstName: kotlin.String? = null,
    /* Also known as title or salutation.  The prefix to the name (e.g. Mr, Mrs, Ms, Miss, Sir, etc) */
    val prefix: kotlin.String? = null,
    /* Used for a trailing suffix to the name (e.g. Jr) */
    val suffix: kotlin.String? = null,
    /* Value is a valid [ANZCO v1.2](http://www.abs.gov.au/ANZSCO) Standard Occupation classification. */
    val occupationCode: kotlin.String? = null
) {

}

