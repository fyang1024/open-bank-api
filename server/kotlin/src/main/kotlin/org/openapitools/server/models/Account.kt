/**
* Consumer Data Standards
* API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
*
* OpenAPI spec version: 1-oas3
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.models

import org.openapitools.server.models.EnumProductCategory

/**
 * 
 * @param accountId A unique ID of the account adhering to the standards for ID permanence
 * @param displayName The display name of the account. If a customer provided nickname is available that value should be returned
 * @param nickname A customer supplied nick name for the account
 * @param maskedNumber A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number this should be formatted with each digit masked and the last three digits unmasked
 * @param openStatus Open or closed status for the account.  If not present then OPEN is assumed
 * @param isOwned Flag indicating that the customer associated with the authorisation is an owner of the account.  Does not indicate sole ownership, however.  If no present then 'true' is assumed
 * @param productCategory 
 * @param productName A unique name or identifier for the account class for this account as defined by the account provider.  Not expected to be used for display
 */
data class Account (
    /* A unique ID of the account adhering to the standards for ID permanence */
    val accountId: kotlin.String,
    /* The display name of the account. If a customer provided nickname is available that value should be returned */
    val displayName: kotlin.String,
    /* A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number this should be formatted with each digit masked and the last three digits unmasked */
    val maskedNumber: kotlin.String,
    val productCategory: EnumProductCategory,
    /* A unique name or identifier for the account class for this account as defined by the account provider.  Not expected to be used for display */
    val productName: kotlin.String,
    /* A customer supplied nick name for the account */
    val nickname: kotlin.String? = null,
    /* Open or closed status for the account.  If not present then OPEN is assumed */
    val openStatus: Account.OpenStatus? = null,
    /* Flag indicating that the customer associated with the authorisation is an owner of the account.  Does not indicate sole ownership, however.  If no present then 'true' is assumed */
    val isOwned: kotlin.Boolean? = null
) {

    /**
    * Open or closed status for the account.  If not present then OPEN is assumed
    * Values: oPEN,cLOSED
    */
    enum class OpenStatus(val value: kotlin.String){
    
        oPEN("OPEN"),
    
        cLOSED("CLOSED");
    
    }

}

