/**
* Consumer Data Standards
* API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
*
* OpenAPI spec version: 1-oas3
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.EnumProductCategory
import io.swagger.client.models.Product
import io.swagger.client.models.ProductAdditionalInformation
import io.swagger.client.models.ProductBundles
import io.swagger.client.models.ProductConstraints
import io.swagger.client.models.ProductDepositRates
import io.swagger.client.models.ProductEligibility
import io.swagger.client.models.ProductFeatures
import io.swagger.client.models.ProductFees
import io.swagger.client.models.ProductLendingRates

/**
 * 
 * @param bundles 
 * @param features 
 * @param constraints 
 * @param eligibility 
 * @param fees 
 * @param depositRates 
 * @param lendingRates 
 */
data class ProductDetail (
    /* A provider specific unique identifier for this product. This identifier must be unique to a product but does not otherwise need to adhere to ID permanence guidelines. */
    val productId: kotlin.String,
    /* The last date and time that the information for this product was changed (or the creation date for the product if it has never been altered) */
    val lastUpdated: kotlin.String,
    val productCategory: EnumProductCategory,
    /* The display name of the product */
    val name: kotlin.String,
    /* A description of the product */
    val description: kotlin.String,
    /* A label of the brand for the product. Able to be used for filtering. For data providers with single brands this value is still required */
    val brand: kotlin.String,
    /* Indicates whether the product is specifically tailored to a circumstance.  In this case fees and prices are significantly negotiated depending on context. While all products are open to a degree of tailoring this flag indicates that tailoring is expected and thus that the provision of specific fees and rates is not applicable */
    val isTailored: kotlin.Boolean
,
    val bundles: kotlin.Array<ProductBundles>? = null,
    val features: kotlin.Array<ProductFeatures>? = null,
    val constraints: kotlin.Array<ProductConstraints>? = null,
    val eligibility: kotlin.Array<ProductEligibility>? = null,
    val fees: kotlin.Array<ProductFees>? = null,
    val depositRates: kotlin.Array<ProductDepositRates>? = null,
    val lendingRates: kotlin.Array<ProductLendingRates>? = null,
    /* The date and time from which this product is effective (ie. is available for origination).  Used to enable the articulation of products to the regime before they are available for customers to originate */
    val effectiveFrom: kotlin.String? = null,
    /* The date and time at which this product will be retired and will no longer be offered.  Used to enable the managed deprecation of products */
    val effectiveTo: kotlin.String? = null,
    /* An optional display name of the brand */
    val brandName: kotlin.String? = null,
    /* A link to the an application web page where this product can be applied for. */
    val applicationUri: kotlin.String? = null,
    val additionalInformation: ProductAdditionalInformation? = null
) {
}