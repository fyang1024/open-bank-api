/**
 * Consumer Data Standards
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.api;

import io.swagger.model.ErrorList;
import io.swagger.model.RequestAccountIds;
import io.swagger.model.ResponseBankingAccount;
import io.swagger.model.ResponseBankingAccounts;
import io.swagger.model.ResponseBankingAccountsBalances;
import io.swagger.model.ResponseBankingTransactionDetail;
import io.swagger.model.ResponseBankingTransactions;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * Consumer Data Standards
 *
 * <p>API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * API tests for AccountsApi 
 */
public class AccountsApiTest {


    private AccountsApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://data.provider.com.au/cds-au/v1", AccountsApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    /**
     * Get Account Detail
     *
     * Obtain detailed information on a single account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountDetailTest() {
        String accountId = null;
        //ResponseBankingAccount response = api.getAccountDetail(accountId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Transaction Detail
     *
     * Obtain detailed information on a transaction for a specific account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionDetailTest() {
        String accountId = null;
        String transactionId = null;
        //ResponseBankingTransactionDetail response = api.getTransactionDetail(accountId, transactionId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Transactions For Account
     *
     * Obtain transactions for a specific account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionsTest() {
        String accountId = null;
        String startTime = null;
        String endTime = null;
        String minAmount = null;
        String maxAmount = null;
        String text = null;
        Integer page = null;
        Integer pageSize = null;
        //ResponseBankingTransactions response = api.getTransactions(accountId, startTime, endTime, minAmount, maxAmount, text, page, pageSize);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Accounts
     *
     * Obtain a list of accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccountsTest() {
        String openStatus = null;
        String isOwned = null;
        String productCategory = null;
        Integer page = null;
        Integer pageSize = null;
        //ResponseBankingAccounts response = api.listAccounts(openStatus, isOwned, productCategory, page, pageSize);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Bulk Balances
     *
     * Obtain balances for multiple, filtered accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBalancesBulkTest() {
        String openStatus = null;
        String isOwned = null;
        String productCategory = null;
        Integer page = null;
        Integer pageSize = null;
        //ResponseBankingAccountsBalances response = api.listBalancesBulk(openStatus, isOwned, productCategory, page, pageSize);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Balances For Specific Accounts
     *
     * Obtain balances for a specified list of accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBalancesSpecificAccountsTest() {
        RequestAccountIds body = null;
        //ResponseBankingAccountsBalances response = api.listBalancesSpecificAccounts(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Transactions For Multiple Accounts
     *
     * Obtain transactions for multiple, filtered accounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTransactionsBulkTest() {
        String openStatus = null;
        String isOwned = null;
        String productCategory = null;
        String startTime = null;
        String endTime = null;
        String minAmount = null;
        String maxAmount = null;
        String text = null;
        Integer page = null;
        Integer pageSize = null;
        //ResponseBankingTransactions response = api.listTransactionsBulk(openStatus, isOwned, productCategory, startTime, endTime, minAmount, maxAmount, text, page, pageSize);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get Transactions For Specific Accounts
     *
     * Obtain transactions for a specified list of transactions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTransactionsSpecificAccountsTest() {
        RequestAccountIds body = null;
        String startTime = null;
        String endTime = null;
        String minAmount = null;
        String maxAmount = null;
        String text = null;
        Integer page = null;
        Integer pageSize = null;
        //ResponseBankingTransactions response = api.listTransactionsSpecificAccounts(bodystartTime, endTime, minAmount, maxAmount, text, page, pageSize);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
}
